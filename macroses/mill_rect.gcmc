// input parameters 
// rate - feed rate
// xMin, yMin - start poiunt
// xD, yD - width and height
// d  - mill diameter 
// ccw - clockwise  0 - clockwise, 2- counter clockwise 
// zSave -  save z
// zFull - deep


//Default Value
/*
xMin = 0;
yMin = 0;
xD = 100;
yD = 60;
d = 6;
zSave = 1.5;
zFull = 3;
zDelta = 2;
ccw = 1;
per_stepover = 50;
zRate = 50;
rate = 200;
*/

if( d <= 0 ) { error("Tool diametr can not be zero or negitive"); }
if( (per_stepover < 0) || (per_stepover >= 90) ) { error("Stepover is wrong"); }
if( rate <= 0 ) { error("Feed rate can not be zero or negitive"); }
if( zRate <= 0 ) { error("Plunge feed rate can not be zero or negitive"); }
if( zDelta == 0 ) { error("Step can not be zero"); }
if( xD <= 0 ) { error("Width (dX) can not be zero or negitive"); }
if( yD <= 0 ) { error("Height (dY) diametr can not be zero or negitive"); }

comment("Starting point:" + to_string(xMin) +"," + to_string(yMin));
comment("Width:" + to_string(xD));
comment("Height:" + to_string(yD));
comment("Mill diameter:" + to_string(d));
comment("Z save:" + to_string(zSave));
comment("Z max:" + to_string(zFull));


Stepover = d * (abs(100-per_stepover)/100.);

rtool = d/2;
xMax = xMin + xD; 
yMax = yMin + yD; 

/*
goto([xMin,yMin,zSave]);
goto([xMax,yMin,zSave]);
goto([xMax,yMax,zSave]);
goto([xMin,yMax,zSave]);
goto([xMin,yMin,zSave]);
*/
xStart = xMin ;
yStart = yMin + rtool ;
xEnd = xMax ;
yEnd = yMax  - rtool;
dy = Stepover;
if ( ccw == 0 )
{
  xStart = xMax;
  yStart = yMax - rtool;
  xEnd = xMin;
  yEnd = yMin + rtool;
}


zCur = 0;
zFull = -1*zFull;
while(zFull < zCur) 
{
    zCur = zCur - zDelta;
    if ( zCur < zFull)
    {
    zCur = zFull;
    } 
    goto([-,-,zSave]);
    goto([xStart,yStart,-]);
    move([-,-,zCur ], zRate);  

    if ( ccw == 0 )
    {
        for(y = yStart; y >= yEnd; )  
        {
            move([xEnd, -,-],rate);
            if ( y <= yEnd ) // already mill
              {break;}
            y-=dy;   
            if ( y < yEnd ) { y = yEnd; }
            arc_ccw( [-, y,-], abs(dy) );
            move([xStart, -,-]);
            if ( y <= yEnd ) // already mill
              { break; }    
            y-=dy;
            if ( y < yEnd ) { y = yEnd; }
            arc_cw( [-, y,-], abs(dy) );
        }
    }
    else //ccw
    {
        for(y = yStart; y <= yEnd; )  
        {
            move([xEnd, -,-],rate);
            if ( y >= yEnd ) // already mill
              {break;}
            y+=dy;   
            if ( y > yEnd ) { y = yEnd; }
            arc_ccw( [-, y,-], abs(dy) );
            move([xStart, -,-]);
            if ( y >= yEnd ) // already mill
              { break; }    
            y+=dy;
            if ( y > yEnd ) { y = yEnd; }
            arc_cw( [-, y,-], abs(dy) );
        }
   } 
}
 
