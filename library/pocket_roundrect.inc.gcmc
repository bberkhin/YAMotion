function millroundrect(xMin_trc, yMin_trc, xMax_trc, yMax_trc, zCurrent, cur_rad,l_ccw )
{

    if ( cur_rad  < 0 )  { cur_rad = 0; }  
    move([xMin_trc,yMin_trc+cur_rad,-]);
    if ( l_ccw )
    {
        if ( cur_rad ) {   arc_ccw ( [xMin_trc + cur_rad ,yMin_trc,-], cur_rad ); }
        move([xMax_trc-cur_rad, -,-]);
        if ( cur_rad ) {   arc_ccw ( [xMax_trc,yMin_trc+cur_rad,-], cur_rad ); }
        move([-,yMax_trc-cur_rad,-]);
        if ( cur_rad ) {   arc_ccw ( [xMax_trc-cur_rad,yMax_trc,-], cur_rad ); }
        move([xMin_trc+cur_rad,-,-]);
        if ( cur_rad ) {   arc_ccw ( [xMin_trc,yMax_trc-cur_rad,-], cur_rad ); }
        move([-,yMin_trc+cur_rad,-]);
    }
    else 
    {
        move([-,yMax_trc-cur_rad,-]);
        if ( cur_rad ) { arc_cw ( [xMin_trc+cur_rad,yMax_trc,-], cur_rad ); }
        move([xMax_trc-cur_rad, -,-]);
        if ( cur_rad ) { arc_cw ( [xMax_trc,yMax_trc-cur_rad,-], cur_rad ); }
        move([-,yMin_trc+cur_rad,-]);
        if ( cur_rad ) { arc_cw ( [xMax_trc-cur_rad,yMin_trc,-], cur_rad ); }
        move([xMin_trc+cur_rad,-,-]);
        if ( cur_rad ) { arc_cw ( [xMin_trc,yMin_trc+cur_rad,-], cur_rad ); }
    }
}


function DoRoundRectPocket(l_xMin, l_yMin, l_xD, l_yD, l_radius, l_depth, l_zSave, l_dMill, l_zDelta,l_stepover,l_xyRate,l_zRate,l_ccw) 
{
if( l_dMill <= 0 ) { error("Tool diametr can not be zero or negitive"); }
if( (l_stepover < 0) || (l_stepover >= 95) ) { error("Stepover is wrong"); }
if( l_xyRate <= 0 ) { error("Feed l_xyRate can not be zero or negitive"); }
if( l_zRate <= 0 ) { error("Plunge feed l_xyRate can not be zero or negitive"); }
if( l_zDelta == 0 ) { error("Step can not be zero"); }
if( l_xD <= 0 ) { error("Width (dX) can not be zero or negitive"); }
if( l_yD <= 0 ) { error("Height (dY) diametr can not be zero or negitive"); }

comment("Milling Round Rect Pocket");
comment("Starting point: [",l_xMin,"," , l_yMin,",-] ; Width: ", l_xD , "; Height: ", l_yD, "; Radius: ", l_radius );
comment("Mill dianetr: ",l_dMill, "; Z save: " ,l_zSave, "; Z Full : ", -1*l_depth, "; Z Step: ",  l_zDelta );


local Stepover = l_dMill * (abs(100-l_stepover)/100.);

local rtool = l_dMill/2;
local xMax = l_xMin + l_xD; 
local yMax = l_yMin + l_yD; 
local zCur = 0;
local zDepth = -1*l_depth;
local xStart, yStart, xEnd, yEnd;
local radd;

while(zDepth < zCur) 
{
    zCur = zCur - l_zDelta;
    if ( zCur < zDepth)
    {
        zCur = zDepth;
    } 
    
    xStart = l_xMin + rtool;
    yStart = l_yMin + rtool ;
    xEnd = xMax  - rtool;
    yEnd = yMax  - rtool;
    dy = Stepover;
    
    radd = l_radius;
    
    goto([-,-,l_zSave]);
    goto([xStart, yStart+radd,-]);
    move([-,-,zCur ], l_zRate);   
    feedrate(l_xyRate);
    for(; xStart <= xEnd && yStart <= yEnd; )  
    {
        millroundrect( xStart, yStart, xEnd, yEnd, zCur, radd,l_ccw);
        xStart += dy;
        yStart += dy;
        xEnd  -= dy;
        yEnd  -= dy;
        radd -= dy; 
    }        
}
 
}
