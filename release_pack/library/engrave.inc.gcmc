/*
 * G-code meta compiler
 *
 * Copyright (C) 2015  B. Stultiens
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/*
 * engrave() function takes care of pen-up/down handling for tracing text.
 *
 * Input:
 * - vlist	Vectorlist from typeset() function
 * - zup	Pen-up position
 * - zdown	Pen-down position
 *
 * The engrave() function assumes that the Z-coordinate has not been altered or
 * scaled as returned from the typeset() function. The Z-coordinate indicates
 * pen-up/down, where 0.0 means pen-down and larger than 0.0 means pen-up (1.0
 * is returned from the typeset() function). The pen movement is always in a
 * single vector, as in: [-, -, penpos].
 *
 */
function engrave(vlist, zup, zdown)
{
	if(!isvectorlist(vlist)) {
		error("engrave(): Argument 1, 'vlist', must be a vectorlist");
		return;
	}
	if(!isscalar(zup)) {
		error("engrave(): Argument 2, 'zup', must be scalar");
		return;
	}
	if(isangle(zup)) {
		warning("engrave(): Argument 2, 'zup', must be distance");
		zup = to_none(zup);
	}
	if(!isscalar(zdown)) {
		error("engrave(): Argument 3, 'zdown', must be scalar");
		return;
	}
	if(isangle(zdown)) {
		warning("engrave(): Argument 3, 'zdown', must be distance");
		zdown = to_none(zdown);
	}

	local up = 0;
	local v;

	foreach(vlist; v) {
		if(!isundef(v.z)) {
			up = to_none(v.z) > 0.0;
			if(up) {
				goto([-, -, zup]);
			} else {
				move([-, -, zdown]);
			}
		} else {
			if(up) {
				goto(v);
			} else {
				move(v);
			}
		}
	}

	return;
}
