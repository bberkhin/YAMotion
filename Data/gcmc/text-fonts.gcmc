/*
 * G-code meta compiler
 *
 * Copyright (C) 2015  B. Stultiens
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *---------------------------------------------------------------------
 * Example of vector fonts
 *---------------------------------------------------------------------
 *
 *   @@@--svg-toolwidth=0.1 --svg-opacity=1.0 --svg-no-movelayer@@@
 */

include("engrave.inc.gcmc");	/* Engraving helper function */

/*
 * Shear the coordinate system in X
 *
 * An italic font is foremost a sheared version of the regular font. This is
 * not really true for all glyphs, but it is close enough for the most simple
 * sans-serif fonts. Real italics means a separate font definition.
 */
function shear_x(vl)
{
	local l = {};
	foreach(vl; v) {
		if(!isundef(v.x) && !isundef(v.y)) {
			v.x += 0.15 * v.y;
		}
		l += {v};
	}
	return l;
}

/* - - - - - - - - - - - - - - - - - - - */
feedrate(400.0mm);

text = "Привет Hello 1 2 3 4 5 6 7 8 9 0 .";
sf = 2.5mm;	/* Scaling factor */

/*
 * Engrave a scaled version of a typeset text.
 * The Sans fonts are sheared to create italics.
 * Offset the lines by two times the scaling factor.
 *
 * The height of the returned typeset text is by definition 1.0. The height is
 * relative to the upper case letter 'X' of the font-face. The line-offset is
 * usually in the order of two times the font-height.
 */

/* Typeset the text */
vl = typeset(text, FONT_HSANS_1);

/* Scale XY to real world coordinates */
/* Do not touch the Z-coordinate, the engrave() function needs the original */
vl = scale(vl, [sf, sf]);

/* Place somewhere in XY space */
/* Again without touching the Z-coordinate */
vl += [0.0mm, 18.0 * sf];

/* Engrave it (output move/goto) with pen-up at 1.0mm and pen-down at 0.0mm */
engrave(vl, 1.0mm, 0.0mm);


/* As one-liners... */
/*
engrave(scale(typeset(text, FONT_HSANS_2		), [sf, sf])  + [0.0mm, 16.0 * sf], 1.0mm, 0.0mm);
engrave(shear_x(scale(typeset(text, FONT_HSANS_1	), [sf, sf])) + [0.0mm, 14.0 * sf], 1.0mm, 0.0mm);
engrave(shear_x(scale(typeset(text, FONT_HSANS_2	), [sf, sf])) + [0.0mm, 12.0 * sf], 1.0mm, 0.0mm);
engrave(scale(typeset(text, FONT_HSCRIPT_1		), [sf, sf])  + [0.0mm, 10.0 * sf], 1.0mm, 0.0mm);
engrave(scale(typeset(text, FONT_HSCRIPT_2		), [sf, sf])  + [0.0mm,  8.0 * sf], 1.0mm, 0.0mm);
engrave(scale(typeset(text, FONT_HTIMES			), [sf, sf])  + [0.0mm,  6.0 * sf], 1.0mm, 0.0mm);
engrave(scale(typeset(text, FONT_HTIMES_BOLD		), [sf, sf])  + [0.0mm,  4.0 * sf], 1.0mm, 0.0mm);
engrave(scale(typeset(text, FONT_HTIMES_ITALIC		), [sf, sf])  + [0.0mm,  2.0 * sf], 1.0mm, 0.0mm);
engrave(scale(typeset(text, FONT_HTIMES_ITALIC_BOLD	), [sf, sf])  + [0.0mm,  0.0 * sf], 1.0mm, 0.0mm);
*/
