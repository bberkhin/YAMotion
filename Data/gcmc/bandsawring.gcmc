// d  - mill diameter 
// trc - tool correction  1 - by contur, 2 inside, 3 ouside
// ccw - clockwise  0 - clockwise, 2- counter clockwise 
// zSave -  save z
// zFull - deep

ccw = 1;
zSave = 5;
zRate = 50;
rate = 200;
d=6;
zDelta = 2;



function do_kern( xCenter, yCenter, r, angle )
{
pos = rotate_xy([xCenter-r,yCenter, -],  angle);

comment("Cern Point:" + to_string(pos) );

goto([-,-,zSave]);
goto(pos);
move([-,-,-1*zDelta], zRate);
}
function do_cut_circle( xCenter, yCenter,r,zFull,trc )
{

comment("Cutting Circle");
comment("Center point:" + to_string(xCenter) +"," + to_string(yCenter));
comment("Radius:" + to_string(r));
comment("Mill dianetr:" + to_string(d));
comment("Z save:" + to_string(zSave));
comment("Z max:" + to_string(-1*zFull));

xStartpos = xCenter - r; 
if( trc == 2 ) 
{ 	xStartpos += (d/2) ; 
}
elif( trc == 3 ) 
{ 	xStartpos -= (d/2); 
}

goto([-,-,zSave]);
goto([xStartpos,yCenter,-]);
zCur = 0;
zFull = -1*zFull;
    while(zFull < zCur) 
    {
         zCur = zCur - zDelta;
         if ( zCur < zFull){
            zCur = zFull;
         }
         move([-,-,zCur ], zRate);
         feedrate(rate);
         if ( ccw ){
            circle_ccw( [xCenter,yCenter,-]);
         }
         else {
            circle_cw( [xCenter,yCenter,-]);
         }
    }
}

spindle(20000);
//do_cut_circle( 0, 0,35/2,3,2 );
rb = 55/2;
do_kern( 0, 0, 0, 0 );
do_kern( 0, 0, rb, 0 );
do_kern( 0, 0, rb, 55deg );
do_kern( 0, 0, rb, 110deg );
do_kern( 0, 0, rb, 180deg);
do_kern( 0, 0, rb, 235deg );
do_kern( 0, 0, rb, 290deg);
do_cut_circle( 0, 0,40,10,3 );
goto([-,-,zSave]);

