/* Local absolutes */
FEEDRATE = 250mm;
ORIGIN = [0.0mm, 0.0mm, 5.0mm];
TOUCHZ = [-, -, -1.0mm];
SAFEZ  = [-, -, 5.0mm];
PREDRILLZ = [-, -, -4.0mm];
TW = 3.0mm;
TW2 = TW / 2.0;
DWELL = -1;	/* >= 0 means dwell enable */

include("tracepath.inc.gcmc");

literal("(-- feed        ", FEEDRATE, " --)\n");
literal("(-- origin      ", ORIGIN, " --)\n");
literal("(-- touchz      ", TOUCHZ, " --)\n");
literal("(-- safez       ", SAFEZ, " --)\n");
literal("(-- predrillz   ", PREDRILLZ, " --)\n");
literal("(-- toolwidth   ", TW, " --)\n");
literal("(-- toolwidth/2 ", TW2, " --)\n");

/* Left side holes */
holelist = {
	[275mil, 155mil],	// Mount
	[275mil, 555mil],	// InA
	[275mil, 1485mil],	// InB
	[275mil, 1785mil]	// Mount
};
/* Press holes */
for(x = 0; x < 4; x++) {
	holelist += { [895mil + x * 2025mil, 335mil] };
	holelist += { [895mil + x * 2025mil, 1605mil] };
}
holelist += {
	/* Right side holes */
	[7575mil, 1605mil],	// Mount
	[7575mil, 1200mil],	// OutA
	[7575mil, 970mil],	// OutB
	[7575mil, 740mil],	// OutC
	[7575mil, 335mil],	// Mount
	/* Alignment holes */
	[6495mil, 80mil],	// Align
	[6495mil, 1860mil],	// Align;
	[2365mil, 1860mil],	// Align;
	[2365mil, 80mil]	// Align;
};

padpath = {
	[0mil+TW2, -75mil+TW2], [0mil+TW2, 75mil-TW2],
	[550mil-TW2, 75mil-TW2], [550mil-TW2, -75mil+TW2]
};

vpath = {
	[280mil, 1080mil], [1870mil, 1255mil], [1990mil, 1375mil], [2460mil-TW2, 1375mil],
	[2460mil-TW2, 1185mil], [1990mil, 1185mil], [1870mil, 1155mil], [470mil, 980mil],
	[470mil, 960mil], [1870mil, 785mil], [1990mil, 755mil], [2460mil-TW2, 755mil],
	[2460mil-TW2, 565mil], [1990mil, 565mil], [1870mil, 685mil], [280mil, 860mil]
};

vpathdrill = {
	[2410mil, 585mil],
	[2410mil, 735mil],
	[2410mil, 1205mil],
	[2410mil, 1355mil]
};

function dodwell()
{
	if(DWELL >= 0) {
		dwell(DWELL);
	}
}

/* Return new path from 'srcpath' traced internally offset by 'width' */
function erode(srcpath, width)
{
	local n, i, pp, pc, pn, v1, v2, bisect, newpoint, crossp, res;
	n = count(srcpath);
	res = {};
	for(i = 0; i < n; i++) {
		pp = srcpath[(i-1+n)%n];	/* Previous point */
		pc = srcpath[i];		/* Current point */
		pn = srcpath[(i+1+n)%n];	/* Next point */
		v1 = normalize(pp - pc);
		v2 = normalize(pn - pc);
		bisect = width * normalize(v1 + v2);
		newpoint = bisect + pc;
		if(i > 0) {
			/* Check convex polygon interior angle */
			crossp = v1[0] * v2[1] - v1[1] * v2[0];
			if(crossp < 0.0) {
				newpoint = -bisect + pc;
			}
		}
		res += { newpoint };
	}
	return res;
}

/* Pad cutout with hole marker */
function putpad(offset)
{
	literal("(-- putpad at offset=", offset, " --)\n");
	goto(padpath[0] + offset);
	move([-,-,-1.0mm]);
	tracepath(padpath + offset, -1.0mm, DWELL);
	move([-,-,-2.0mm]);
	tracepath(padpath + offset, -2.0mm, DWELL);
	move([-,-,-1.0mm]);

	goto([50mil, 0mil] + offset);
	dodwell();
	move(PREDRILLZ);
	dodwell();
	move(SAFEZ);
}

/********************* Program start *********************/

feedrate(FEEDRATE);
goto(ORIGIN);
goto(SAFEZ);

/* Touchoff on all holes */
foreach(holelist; hole) {
	goto(hole);
	move(TOUCHZ);
	dodwell();
	move(SAFEZ);
}

/* Make room for the pads */
putpad([1560mil, 80mil]);
putpad([1560mil, 1860mil]);

/* Component area */
epath = erode(vpath, TW*2/3);
goto(vpath[0]);
move([-,-,-1.0mm]);
tracepath(vpath, -1.0mm, DWELL);
move(epath[0]);
tracepath(epath, -1.0mm, DWELL);
move(vpath[0]);
move([-,-,-2.0mm]);
tracepath(vpath, -2.0mm, DWELL);
move(epath[0]);
tracepath(epath, -2.0mm, DWELL);
move(SAFEZ);

/* Pad hole markers for component area */
foreach(vpathdrill; hole) {
	goto(hole);
	dodwell();
	move(PREDRILLZ);
	dodwell();
	move(SAFEZ);
}

putpad([6620mil, 970mil]);

move(SAFEZ);
goto(ORIGIN);
