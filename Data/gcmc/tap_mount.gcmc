
include("tracepath_comp.inc.gcmc");
include("cc_hole.inc.gcmc");
feedrate(200mm);

path = {
	[ 0, 20], [ 0, 120], [ 100,  120],
	[100, 0], [40,  0], [40, 20],		

};


/*
 * Simple tracer to show the outline
 */
function trace(path, offset)
{
	path = tail(path, -1) + head(path, 1);
	goto(path[-1] + offset);
	foreach(path; v) {
		goto(v + offset);
		//dwell(0);
	}
}

/* -------------------- Main Program -------------------- */

SAFEZ = 5.0mm;			// Safe Z-level
CUTZ  = -1.0mm;			// Cutting level
HOME  = [0.0mm, 0.0mm, SAFEZ];
TW    = 4.0mm;			// Tool width
TW2   = TW/2.0;			// Half tool-width for compensation

goto(HOME);

trace(path, []);	// Show a rapid path to see the difference
path[0][2] = CUTZ;	// Set the cutting depth at the first point

/*
 * Choose your test trace by uncommenting the line(s) you want to see
 */
 tracepath_comp(path, TW2, TPC_LEFT|TPC_OLDZ|TPC_ARCIN|TPC_ARCOUT|TPC_CLOSED);
 
//tracepath_comp(path, TW2, TPC_LEFT|TPC_OLDZ|TPC_ARCIN|TPC_ARCOUT|TPC_CLOSED);
//tracepath_comp(path, TW2, TPC_RIGHT|TPC_OLDZ|TPC_ARCIN|TPC_ARCOUT|TPC_CLOSED);
//tracepath_comp(path, TW2, TPC_RIGHT|TPC_OLDZ|TPC_ARCIN|TPC_ARCOUT|TPC_QUIET);
//tracepath_comp(path, TW2, TPC_LEFT|TPC_OLDZ|TPC_ARCIN|TPC_ARCOUT|TPC_QUIET);
//tracepath_comp(path, TW2, TPC_RIGHT|TPC_OLDZ);
//tracepath_comp(path, TW2, TPC_LEFT|TPC_OLDZ);

cc_hole([80mm, 20mm], 13.0mm, TW2, TW2/2.0, CUTZ);
cc_hole([80mm, 100mm], 13.0mm, TW2, TW2/2.0, CUTZ);

goto([-,-,SAFEZ);
